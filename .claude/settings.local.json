{
  "permissions": {
    "allow": [
      "Bash(aws logs filter-log-events:*)",
      "Bash(./deploy.sh)",
      "Read(//private/tmp/**)",
      "Bash(aws lambda invoke:*)",
      "Bash(cat:*)",
      "Bash(for func in blog-daily-workflow blog-approval-handler blog-manual-trigger)",
      "Bash(do echo \"=== $func ===\")",
      "Bash(aws lambda update-function-code:*)",
      "Bash(done)",
      "Bash(pip3 install:*)",
      "Read(//Users/chin/Documents/projects/**)",
      "Bash(do echo \"Updating $func...\")",
      "Bash(zip:*)",
      "Bash(for func in blog-daily-workflow blog-manual-trigger)",
      "Bash(aws secretsmanager describe-secret:*)",
      "Bash(do aws lambda update-function-code --function-name \"$func\" --zip-file fileb://blog_agent.zip --profile blog-automation --region us-east-1 --query \"LastModified\" --output text)",
      "Bash(aws secretsmanager update-secret:*)",
      "Bash(aws dynamodb scan:*)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "Bash(./update_iam_permissions.sh:*)",
      "Bash(env)",
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(./install_mcp.sh:*)",
      "Read(//Users/chin/Library/**)",
      "Bash(claude mcp:*)",
      "Read(//Users/chin/.config/**)",
      "Bash(claude --version)",
      "Read(//Users/chin/**)",
      "Bash(aws dynamodb get-item:*)",
      "Bash(aws logs tail:*)",
      "Bash(aws cloudwatch get-dashboard:*)",
      "Bash(aws cloudwatch list-metrics:*)",
      "Bash(aws lambda get-function-event-invoke-config:*)",
      "Bash(aws lambda get-function:*)",
      "Bash(aws events list-rules:*)",
      "Bash(aws lambda list-event-source-mappings:*)",
      "Bash(./fix_lambda_retry.sh:*)",
      "Read(//tmp/**)",
      "Bash(/tmp/test-multi.json )",
      "Bash(__NEW_LINE__ sleep 2)",
      "Bash(if [ -f /tmp/test-multi.json ])",
      "Bash(then)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(while read wf_id)",
      "Bash(do if [ ! -z \"$wf_id\" ])",
      "Bash(then aws dynamodb delete-item --table-name blog-workflow-state --key \"{\"\"workflow_id\"\":{\"\"S\"\":\"\"$wf_id\"\"}}\" --profile blog-automation --region us-east-1 echo \"Deleted: $wf_id\" fi done)",
      "Bash(aws dynamodb delete-item:*)",
      "Bash(then cat /tmp/test-multi.json)",
      "Bash(else echo \"Response file not found\")",
      "Bash(then echo \"=== Lambda Response ===\")",
      "Bash(else echo \"Response file not created yet - Lambda still running\")",
      "Bash(for:*)",
      "Bash(xargs:*)",
      "Bash(if [ -f /tmp/test-multi-new.json ])",
      "Bash(then echo \"=== Result ===\")",
      "Bash(else echo \"Still running...\")",
      "Bash(if [ -f /tmp/test-latest.json ])",
      "Bash(then cat /tmp/test-latest.json)",
      "Bash(else echo \"Test still running or file missing\")",
      "Bash(if [ -f /tmp/test-final.json ])",
      "Bash(then echo \"=== Test Result ===\")",
      "Bash(then cat /tmp/test-final.json)",
      "Bash(else echo \"File missing\")",
      "Bash(if [ -f /tmp/test-clean.json ])",
      "Bash(then cat /tmp/test-clean.json)",
      "Bash(do echo \"Deploying $func...\")",
      "Bash(pkill:*)",
      "Bash(git -C /Users/chin/Documents/projects/blog-automation remote get-url origin)"
    ],
    "deny": [],
    "ask": []
  }
}
